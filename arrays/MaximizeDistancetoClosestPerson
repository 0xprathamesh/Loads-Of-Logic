class Solution {
    public int maxDistToClosest(int[] seats) {

     int len = seats.length;
     int gap = Integer.MIN_VALUE;
     int lst = 0;
     int fst = 0;
     int ind = 0;
     int steps = 0;
        
        if(seats[0] == 0){
            
            for(int i=0;i<len;i++){
                if(seats[i] == 1){
                    ind = i;
                    fst = steps;
                    break;
                }else
                    steps++;
            }
        }
        
        steps = 0; 
     for(int i= ind ;i<len;i++){
         
         if( i == len - 1 && seats[i] == 0){
               lst = steps + 1;
               break;
         }
         
        if(seats[i] == 0 ){
            steps++;
        }
        if(seats[i] == 1 ){
            if(steps > gap)
                gap = steps;
            steps = 0;
        }
    }
        
        
    int mid_gap = (int)Math.floor((gap + 1)/(double)2);
       
    if(fst >= lst && fst >= mid_gap)
             return fst;
     else if(mid_gap >= fst && mid_gap >= lst)
           return mid_gap;
     else 
           return lst ;
       
    }
}
